import Head from "next/head";
import Image from "next/image";
import { SignInButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { type RouterOutputs, api } from "~/utils/api";

export default function Home() {
  const { isSignedIn } = useUser();

  const { data: posts, isLoading } = api.post.list.useQuery();

  return (
    <>
      <Head>
        <title>Tick</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-700 md:max-w-2xl">
          <div className="border-b border-slate-700 p-4">
            {!isSignedIn ? (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            ) : (
              <CreatePostWizard />
            )}
          </div>
          <div className="flex flex-col">
            {isLoading && "Loading..."}
            {!posts?.length
              ? "No posts yet"
              : posts.map((post) => <PostView key={post.id} {...post} />)}
          </div>
        </div>
      </main>
    </>
  );
}

function CreatePostWizard() {
  const { user } = useUser();

  if (!user?.username) return null;

  return (
    <div className="flex w-full gap-4">
      <UserImage
        id={user.id}
        username={user.username}
        imageUrl={user.imageUrl}
      />
      <input
        className="grow bg-transparent outline-none"
        placeholder="Type some text..."
      />
    </div>
  );
}

type PostWithUser = RouterOutputs["post"]["list"][number];

function PostView(post: PostWithUser) {
  return (
    <div key={post.id} className="flex gap-4 border-b border-slate-700 p-4">
      <UserImage {...post.author} />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-400">
          <span>@{post.author.username}</span>
          <span>Â·</span>
          <span>{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
}

function UserImage(author: PostWithUser["author"]) {
  return (
    <Image
      src={author.imageUrl}
      alt={`@${author.username} profile`}
      width={100}
      height={100}
      className="h-14 w-14 rounded-full"
      placeholder="empty"
    />
  );
}
